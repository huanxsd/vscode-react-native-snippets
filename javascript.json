{
    /*
	// Place your snippets for Javascript (Babel) here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
    "style flexDirection row": {
        "prefix": "flex row",
        "body": [
            "flexDirection: 'row',"
        ]
    },
    "style flexWrap wrap": {
        "prefix": "flex wrap",
        "body": [
            "flexWrap: 'wrap',"
        ]
    },
    "style justifyContent center": {
        "prefix": "justify center",
        "body": [
            "justifyContent: 'center',"
        ]
    },
    "style alignItems center": {
        "prefix": "alignItems center",
        "body": [
            "alignItems: 'center',"
        ]
    },
    "style backgroundColor white": {
        "prefix": "backgroundColor white",
        "body": [
            "backgroundColor: 'white',"
        ]
    },

    "constructor": {
        "prefix": "cst",
        "body": [
            "constructor(props: Object) {",
            "    super(props)",
            "",
            "    $1",
            "}"
        ]
    },
    "copyright": {
        "prefix": "copyright",
        "body": [
            "/**",
            " * Copyright (c) 2017-present, Liu Jinyong",
            " * All rights reserved.",
            " *",
            " * @flow",
            " */"
        ]
    },
    "create class": {
        "prefix": "rncc",
        "body": [
            "/**",
            " * Copyright (c) 2017-present, Liu Jinyong",
            " * All rights reserved.",
            " *",
            " * @flow",
            " */",
            "",
            "import React, { PureComponent } from 'react'",
            "import { View, Text, StyleSheet } from 'react-native'",
            "",
            "class ${1:MyClass} extends PureComponent {",
            "",
            "    render() {",
            "        return (",
            "            <View>",
            "                ",
            "            </View>",
            "        )",
            "    }",
            "",
            "}",
            "",
            "const styles = StyleSheet.create({",
            "",
            "})",
            "",
            "export default ${1:MyClass}"
        ]
    },
    "then response": {
        "prefix": "response",
        "body": [
            ".then(response => {",
            "    ${1}",
            "})"
        ]
    },

    "debug fuck": {
        "prefix": "fuck",
        "body": [
            "alert('fuck')"
        ]
    },

    "navigation ": {
        "prefix": "navopt",
        "body": [
            "static navigationOptions = ({ navigation }) => ({",
            "    title: '${1:title}',",
            "})"
        ]
    },
    "log": {
        "prefix": "clog",
        "body": [
            "console.log('${1:text}')"
        ]
    },
    "bind": {
        "prefix": "bd",
        "body": "{ (this: any).${1:function} = this.${1:function}.bind(this) }"
    },
    "set state": {
        "prefix": "sst",
        "body": "this.setState({ ${1:key}: ${2:value} })"
    },
    "arrow function" : {
        "prefix": "arrow function",
        "body": [
            "${1} = (${2}) => {",
            "    ${3}",
            "}"
        ]
    },
    "ref" : {
        "prefix": "ref",
        "body": "ref={(e) => this.${1:obj} = e}"
    }
}